<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>《CSS（层叠样式表） 学习笔记之 cursor》</title>
      <link href="https://yk-ddm.github.io/posts/2312.html"/>
      <url>https://yk-ddm.github.io/posts/2312.html</url>
      
        <content type="html"><![CDATA[<h1 id="《CSS（层叠样式表）-学习笔记之-cursor》"><a href="#《CSS（层叠样式表）-学习笔记之-cursor》" class="headerlink" title="《CSS（层叠样式表） 学习笔记之 cursor》"></a>《CSS（层叠样式表） 学习笔记之 cursor》</h1><h2 id="cursor-简介"><a href="#cursor-简介" class="headerlink" title="cursor 简介"></a>cursor 简介</h2><blockquote><p>cursor 是 CSS 属性设置光标的类型（如果有），在鼠标指针悬停在元素上时显示相应样式</p></blockquote><pre><code class="css">cursor: help;cursor: wait;cursor: crosshair;cursor: not-allowed;cursor: zoom-in;cursor: grab;</code></pre><blockquote><p>cursor: help;  效果如下：</p></blockquote><img alt="cursor: help;" width=400 height=300 src="https://img-blog.csdnimg.cn/8157d993627349cf8f6dbf3cfec66a76.jpg?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAeWstZGRt,size_1,color_FFFFFF,t_70,g_se,x_16#pic_center" /><blockquote><p>cursor: wait;  效果如下：</p></blockquote><img alt="cursor: wait;" width=400 height=300 src="https://img.yasuotu.com/uploads/2021/09/13/613ef606484dc_613ef60693c58.jpg?time=1631516171" /><blockquote><p>cursor: crosshair;  效果如下：</p></blockquote><img alt="cursor: crosshair;" width=400 height=300 src="https://img.yasuotu.com/uploads/2021/09/13/613ef8dcd469c_613ef8ddad38e.jpg?time=1631516898" /><blockquote><p>cursor: not-allowed;  效果如下：</p></blockquote><img alt="cursor: not-allowed;" width=400 height=300 src="https://img-blog.csdnimg.cn/4c76617b9a124d148ece43bdeba3d86f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAeWstZGRt,size_20,color_FFFFFF,t_70,g_se,x_16" /><blockquote><p>cursor: zoom-in;  效果如下：</p></blockquote><img alt="cursor: zoom-in;" width=400 height=300 src="https://img-blog.csdnimg.cn/3a7ed3679aa444d4802bae92d12b74d0.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAeWstZGRt,size_20,color_FFFFFF,t_70,g_se,x_16" /><blockquote><p>cursor: grab;  效果如下：</p></blockquote><img alt="cursor: grab;" width=400 height=300 src="https://img-blog.csdnimg.cn/7fe0c4ade1da43fdb37d1ad307780c6f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBAeWstZGRt,size_20,color_FFFFFF,t_70,g_se,x_16" /><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> CSS </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Web 开发技术 </tag>
            
            <tag> CSS </tag>
            
            <tag> cursor </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>《JavaScript 学习笔记 之 日常练习案例》</title>
      <link href="https://yk-ddm.github.io/posts/20068.html"/>
      <url>https://yk-ddm.github.io/posts/20068.html</url>
      
        <content type="html"><![CDATA[<h1 id="JavaScript-学习笔记"><a href="#JavaScript-学习笔记" class="headerlink" title="JavaScript 学习笔记"></a>JavaScript 学习笔记</h1><hr /><h2 id="日常练习案例"><a href="#日常练习案例" class="headerlink" title="日常练习案例"></a>日常练习案例</h2><hr /><h3 id="字符串操作"><a href="#字符串操作" class="headerlink" title="字符串操作"></a>字符串操作</h3><pre><code class="js">// &#39;abcEFG&#39;  重新排序 ---&gt; 规则是 把大写字母放前面，小写字母放后面// realization/**    explain：    operationStr 操作字符串    应用了： String.split()  切割字符串返回数组、    Array.join() 将数组中的元素以某种操作符连接起来、    正则表达式的使用 */function operationStr(str)&#123;    return str.split(/[a-z]/g).join(&#39;&#39;) + str.split(/[A-Z]/g).join(&#39;&#39;)&#125;// Testvar str = &#39;abcEFG&#39;,  // expect output: &#39;EFGabc&#39;    result = operationStr(str)console.log(result)  // output: &#39;EFGabc&#39;</code></pre><ul><li><code>查看测试结果</code><br><img src="https://uploadfiles.nowcoder.com/files/20210816/838378582_1629111449561/f5833805ece3444d9df5cbc1587b78e7.png" alt="在这里插入图片描述"></li></ul><h3 id="Boolean-类型学习练习"><a href="#Boolean-类型学习练习" class="headerlink" title="Boolean 类型学习练习"></a>Boolean 类型学习练习</h3><pre><code class="js">/**    explain：    test 自定义变量名称        Boolean类型        new Boolean()  实例化，默认 返回 false    document 文档        document.write()  向页面打印信息，会覆盖页面原有的内容    document.write(&quot;&lt;br /&gt;&quot;)   向页面输出一个换行*/var testtest = new Boolean()document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(null)document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(&#39;&#39;)   // &#39;&#39; 或 &quot;&quot;document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(undefined)document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(NaN)document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(0)document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(false)  document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: falsetest = new Boolean(true)  document.write(test)document.write(&quot;&lt;br /&gt;&quot;)  // output: true</code></pre><ul><li>查看测试结果</li></ul><p><img src="https://uploadfiles.nowcoder.com/images/20210817/838378582_1629200064609/468DD5DDE04AEED9D181C17F0FEED120" alt="图片说明" title="图片标题"> </p>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
